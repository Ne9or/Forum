// <auto-generated />
using Forum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Forum.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20230401133456_IsDeletedFlagAdded")]
    partial class IsDeletedFlagAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Forum.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Posts Identifier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)")
                        .HasComment("Content");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasComment("Marks record as deleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Post Title");

                    b.HasKey("Id");

                    b.ToTable("Posts", t =>
                        {
                            t.HasComment("Published Posts");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Programming sure doesn't kill me!!!:))))",
                            IsDeleted = false,
                            Title = "My first post"
                        },
                        new
                        {
                            Id = 2,
                            Content = "It really doesn't :)))))))))",
                            IsDeleted = false,
                            Title = "My second post"
                        },
                        new
                        {
                            Id = 3,
                            Content = "I swear I am sane!!!(I need help)",
                            IsDeleted = false,
                            Title = "My third post"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
